#!/bin/bash

# E-commerce Test Automation Framework Demo Script
# This script demonstrates the key features of our Java-based test automation framework

echo "üöÄ E-commerce Test Automation Framework Demo"
echo "=============================================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_step() {
    echo -e "${BLUE}üìã Step $1: $2${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Check if we're in the right directory
if [ ! -f "pom.xml" ]; then
    print_error "Please run this script from the project root directory"
    exit 1
fi

print_step "1" "Framework Overview"
echo "This framework demonstrates:"
echo "  ‚Ä¢ Java 17 with Maven"
echo "  ‚Ä¢ Playwright for UI automation"
echo "  ‚Ä¢ REST Assured for API testing"
echo "  ‚Ä¢ TestNG as test runner"
echo "  ‚Ä¢ Cucumber for BDD"
echo "  ‚Ä¢ Professional architecture with dependency injection"
echo ""

print_step "2" "Project Structure"
echo "Key components:"
echo "  ‚Ä¢ src/main/java/ - Core framework classes"
echo "  ‚Ä¢ src/test/java/ - Test implementations"
echo "  ‚Ä¢ src/test/resources/ - Configuration and feature files"
echo "  ‚Ä¢ pom.xml - Maven dependencies and build configuration"
echo ""

print_step "3" "Configuration Management"
echo "Environment-specific configurations:"
echo "  ‚Ä¢ dev.properties - Development environment"
echo "  ‚Ä¢ staging.properties - Staging environment"
echo "  ‚Ä¢ prod.properties - Production environment"
echo "  ‚Ä¢ Secure API credential management with environment variables"
echo ""

print_step "4" "Running UI Tests (Homepage Tests)"
print_warning "Starting UI tests - this will open a browser window"
echo ""

# Run homepage tests
echo "Running: mvn test -Dtag=ECOM-1"
mvn test -Dtag=ECOM-1
if [ $? -eq 0 ]; then
    print_success "UI Test completed successfully"
else
    print_error "UI Test failed"
fi
echo ""

print_step "5" "Running API Tests"
print_warning "API tests require valid credentials - showing framework structure"
echo ""

# Show API test structure without running (since credentials might not be set)
echo "API Test Structure:"
echo "  ‚Ä¢ BaseApiTest - Common API functionality"
echo "  ‚Ä¢ CustomerApiTest - Customer management tests"
echo "  ‚Ä¢ Secure credential validation"
echo "  ‚Ä¢ Professional error handling"
echo ""

print_step "6" "Framework Features Demonstrated"
echo "‚úÖ Professional Architecture:"
echo "  ‚Ä¢ Page Object Model (POM)"
echo "  ‚Ä¢ Dependency Injection with PicoContainer"
echo "  ‚Ä¢ Factory Pattern for page creation"
echo "  ‚Ä¢ Centralized configuration management"
echo ""

echo "‚úÖ Test Management:"
echo "  ‚Ä¢ Cucumber BDD with Gherkin syntax"
echo "  ‚Ä¢ TestNG integration for parallel execution"
echo "  ‚Ä¢ Tag-based test execution"
echo "  ‚Ä¢ Comprehensive logging with SLF4J"
echo ""

echo "‚úÖ Security & Best Practices:"
echo "  ‚Ä¢ Environment variable-based credential management"
echo "  ‚Ä¢ Clear error messages and setup instructions"
echo "  ‚Ä¢ Professional Git workflow"
echo "  ‚Ä¢ Comprehensive .gitignore"
echo ""

print_step "7" "Key Commands for Interview"
echo "Essential Maven commands:"
echo "  ‚Ä¢ mvn clean compile          - Compile the project"
echo "  ‚Ä¢ mvn test                   - Run all tests"
echo "  ‚Ä¢ mvn test -Dtag=ECOM-1      - Run specific test by tag"
echo "  ‚Ä¢ mvn test -Dtags='@ui'      - Run tests by tag category"
echo "  ‚Ä¢ mvn clean install          - Full build and test"
echo ""

print_step "8" "Framework Highlights for Interview"
echo "üéØ What makes this framework professional:"
echo "  ‚Ä¢ Scalable architecture with proper separation of concerns"
echo "  ‚Ä¢ Industry-standard tools and practices"
echo "  ‚Ä¢ Comprehensive error handling and logging"
echo "  ‚Ä¢ Secure credential management"
echo "  ‚Ä¢ Easy to maintain and extend"
echo "  ‚Ä¢ Ready for CI/CD integration"
echo ""

print_success "Demo completed! This framework demonstrates professional Java test automation skills."
echo ""
echo "üìö Next steps for interview:"
echo "  1. Explain the architecture and design patterns used"
echo "  2. Show how to add new tests and maintain the framework"
echo "  3. Discuss CI/CD integration possibilities"
echo "  4. Highlight security and best practices implemented"
echo ""

print_warning "Note: API tests require valid WooCommerce credentials to run successfully"
echo "Set environment variables:"
echo "  export API_CONSUMER_KEY='your_key_here'"
echo "  export API_CONSUMER_SECRET='your_secret_here'"
